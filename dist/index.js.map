{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "window.Webflow ||= [];\r\nwindow.Webflow.push(() => {\r\n  // Get references to the elements you want to style\r\n  const navbar = document.querySelector<HTMLElement>('.navbar');\r\n  const navLinks = document.querySelectorAll<HTMLElement>('.nav-link');\r\n  const nominalLogo = document.querySelector<HTMLElement>('.nominal-logo');\r\n  const navDemoButton = document.querySelector<HTMLElement>('.nav-demo-button-text'); // Updated class name\r\n  const navMenuButton = document.querySelector<HTMLElement>('.menu-button');\r\n  const navLinkLine = document.querySelectorAll<HTMLElement>('.nav--link-line');\r\n\r\n  // Function to update styles for desktop screens\r\n  function updateDesktopStyles() {\r\n    const { scrollY } = window;\r\n\r\n    if (navbar && navDemoButton) {\r\n      if (scrollY <= 300) {\r\n        navbar.style.backgroundColor = 'transparent';\r\n        navbar.style.height = '9.6rem';\r\n\r\n        navLinks.forEach((link) => {\r\n          link.style.color = '#F9FAFC';\r\n        });\r\n        navLinkLine.forEach((navLinkLine) => {\r\n          navLinkLine.style.backgroundColor = '#F9FAFC';\r\n        });\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = '#F9FAFC';\r\n        }\r\n        navDemoButton.style.backgroundImage =\r\n          'url(\"https://uploads-ssl.webflow.com/65201a824f1d6877e14543bf/6523f4457bde5cea96273b91_Demo.svg\")';\r\n        navDemoButton.style.color = '#27274E';\r\n      } else {\r\n        navbar.style.backgroundColor = '#FAFBFD';\r\n        navbar.style.height = '7.2rem';\r\n\r\n        navLinkLine.forEach((navLinkLine) => {\r\n          navLinkLine.style.backgroundColor = '#27274E';\r\n        });\r\n        navLinks.forEach((link) => {\r\n          link.style.color = '#27274E';\r\n        });\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = '#27274E';\r\n        }\r\n        navDemoButton.style.backgroundImage =\r\n          'url(\"https://uploads-ssl.webflow.com/65201a824f1d6877e14543bf/6523f51d4f2795533e5ad22f_Demo-dark.svg\")';\r\n        navDemoButton.style.color = 'white';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Ensure elements exist before accessing them\r\n  if (navMenuButton) {\r\n    navMenuButton.addEventListener('click', handleMenuButtonClick);\r\n  }\r\n\r\n  // Function to update styles for mobile screens\r\n  function updateMobileStyles() {\r\n    const { scrollY } = window;\r\n\r\n    if (navbar && navMenuButton) {\r\n      if (scrollY > 80) {\r\n        // Add your mobile-specific actions here when scrolling\r\n        navbar.style.backgroundColor = '#FAFBFD';\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = '#27274E';\r\n        }\r\n        navMenuButton.style.color = '#27274E';\r\n      }\r\n      // Reset styles for mobile when scrolling back to the top\r\n      else {\r\n        navbar.style.backgroundColor = 'transparent';\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = '#F9FAFC';\r\n        }\r\n        if (navDemoButton) {\r\n          navDemoButton.style.color = 'white';\r\n        }\r\n        navMenuButton.style.color = 'white';\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to handle menu button click on mobile\r\n  function handleMenuButtonClick() {\r\n    if (navMenuButton?.classList.contains('w--open')) {\r\n      // needs to get back to the same color as the hamburger\r\n      document.body.classList.remove('disable-scroll');\r\n\r\n      if (navMenuButton) {\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = navMenuButton.style.color;\r\n        }\r\n      }\r\n    } else {\r\n      // needs to be F9FAFC\r\n      if (navMenuButton) {\r\n        if (nominalLogo) {\r\n          nominalLogo.style.color = '#F9FAFC';\r\n        }\r\n      }\r\n      document.body.classList.add('disable-scroll');\r\n    }\r\n  }\r\n\r\n  // Function to decide which styles to apply based on screen width\r\n  function updateNavbarStyles() {\r\n    const screenWidth = window.innerWidth;\r\n\r\n    if (screenWidth <= 992) {\r\n      // Apply mobile styles for screens smaller than or equal to 992 pixels\r\n      updateMobileStyles();\r\n    } else {\r\n      // Apply desktop styles for screens larger than 992 pixels\r\n      updateDesktopStyles();\r\n    }\r\n  }\r\n\r\n  // Attach the scroll event listener to the window\r\n  window.addEventListener('scroll', updateNavbarStyles);\r\n  window.addEventListener('resize', updateNavbarStyles); // Add a resize event listener\r\n\r\n  // Initial call to set the initial styles based on the page load\r\n  updateNavbarStyles();\r\n\r\n  // Function to check if an element is in view and trigger animation\r\n  function checkAndAnimate(element: HTMLElement) {\r\n    const top_of_element = element.offsetTop;\r\n    const bottom_of_element = top_of_element + element.offsetHeight;\r\n    const bottom_of_screen = window.scrollY + window.innerHeight * 0.8;\r\n    const top_of_screen = window.scrollY;\r\n\r\n    if (\r\n      (bottom_of_screen > top_of_element && top_of_screen < bottom_of_element) ||\r\n      element.classList.contains('is-visible')\r\n    ) {\r\n      element.classList.add('is-visible');\r\n      element.style.opacity = '1';\r\n    }\r\n  }\r\n\r\n  // Add scroll event listener to check and animate elements on scroll\r\n  window.addEventListener('scroll', function () {\r\n    // Check and animate elements with \"fade-in\" attribute\r\n    document.querySelectorAll('[fade-in]').forEach(function (element) {\r\n      checkAndAnimate(element as HTMLElement);\r\n    });\r\n\r\n    // Check and animate elements with \"fade-in|='to-top'\" attribute\r\n    document.querySelectorAll(\"[fade-in|='to-top']\").forEach(function (element) {\r\n      checkAndAnimate(element as HTMLElement);\r\n    });\r\n  });\r\n\r\n  // Initially check and animate all elements with \"fade-in\" attribute\r\n  document.querySelectorAll('[fade-in]').forEach(function (element) {\r\n    checkAndAnimate(element as HTMLElement);\r\n  });\r\n\r\n  // Initially check and animate all elements with \"fade-in|='to-top'\" attribute\r\n  document.querySelectorAll(\"[fade-in|='to-top']\").forEach(function (element) {\r\n    checkAndAnimate(element as HTMLElement);\r\n  });\r\n});\r\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,iCAAsB,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AAExB,UAAM,SAAS,SAAS,cAA2B,SAAS;AAC5D,UAAM,WAAW,SAAS,iBAA8B,WAAW;AACnE,UAAM,cAAc,SAAS,cAA2B,eAAe;AACvE,UAAM,gBAAgB,SAAS,cAA2B,uBAAuB;AACjF,UAAM,gBAAgB,SAAS,cAA2B,cAAc;AACxE,UAAM,cAAc,SAAS,iBAA8B,iBAAiB;AAG5E,aAAS,sBAAsB;AAC7B,YAAM,EAAE,QAAQ,IAAI;AAEpB,UAAI,UAAU,eAAe;AAC3B,YAAI,WAAW,KAAK;AAClB,iBAAO,MAAM,kBAAkB;AAC/B,iBAAO,MAAM,SAAS;AAEtB,mBAAS,QAAQ,CAAC,SAAS;AACzB,iBAAK,MAAM,QAAQ;AAAA,UACrB,CAAC;AACD,sBAAY,QAAQ,CAACA,iBAAgB;AACnC,YAAAA,aAAY,MAAM,kBAAkB;AAAA,UACtC,CAAC;AACD,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ;AAAA,UAC5B;AACA,wBAAc,MAAM,kBAClB;AACF,wBAAc,MAAM,QAAQ;AAAA,QAC9B,OAAO;AACL,iBAAO,MAAM,kBAAkB;AAC/B,iBAAO,MAAM,SAAS;AAEtB,sBAAY,QAAQ,CAACA,iBAAgB;AACnC,YAAAA,aAAY,MAAM,kBAAkB;AAAA,UACtC,CAAC;AACD,mBAAS,QAAQ,CAAC,SAAS;AACzB,iBAAK,MAAM,QAAQ;AAAA,UACrB,CAAC;AACD,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ;AAAA,UAC5B;AACA,wBAAc,MAAM,kBAClB;AACF,wBAAc,MAAM,QAAQ;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAGA,QAAI,eAAe;AACjB,oBAAc,iBAAiB,SAAS,qBAAqB;AAAA,IAC/D;AAGA,aAAS,qBAAqB;AAC5B,YAAM,EAAE,QAAQ,IAAI;AAEpB,UAAI,UAAU,eAAe;AAC3B,YAAI,UAAU,IAAI;AAEhB,iBAAO,MAAM,kBAAkB;AAC/B,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ;AAAA,UAC5B;AACA,wBAAc,MAAM,QAAQ;AAAA,QAC9B,OAEK;AACH,iBAAO,MAAM,kBAAkB;AAC/B,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ;AAAA,UAC5B;AACA,cAAI,eAAe;AACjB,0BAAc,MAAM,QAAQ;AAAA,UAC9B;AACA,wBAAc,MAAM,QAAQ;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAGA,aAAS,wBAAwB;AAC/B,UAAI,eAAe,UAAU,SAAS,SAAS,GAAG;AAEhD,iBAAS,KAAK,UAAU,OAAO,gBAAgB;AAE/C,YAAI,eAAe;AACjB,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ,cAAc,MAAM;AAAA,UAChD;AAAA,QACF;AAAA,MACF,OAAO;AAEL,YAAI,eAAe;AACjB,cAAI,aAAa;AACf,wBAAY,MAAM,QAAQ;AAAA,UAC5B;AAAA,QACF;AACA,iBAAS,KAAK,UAAU,IAAI,gBAAgB;AAAA,MAC9C;AAAA,IACF;AAGA,aAAS,qBAAqB;AAC5B,YAAM,cAAc,OAAO;AAE3B,UAAI,eAAe,KAAK;AAEtB,2BAAmB;AAAA,MACrB,OAAO;AAEL,4BAAoB;AAAA,MACtB;AAAA,IACF;AAGA,WAAO,iBAAiB,UAAU,kBAAkB;AACpD,WAAO,iBAAiB,UAAU,kBAAkB;AAGpD,uBAAmB;AAGnB,aAAS,gBAAgB,SAAsB;AAC7C,YAAM,iBAAiB,QAAQ;AAC/B,YAAM,oBAAoB,iBAAiB,QAAQ;AACnD,YAAM,mBAAmB,OAAO,UAAU,OAAO,cAAc;AAC/D,YAAM,gBAAgB,OAAO;AAE7B,UACG,mBAAmB,kBAAkB,gBAAgB,qBACtD,QAAQ,UAAU,SAAS,YAAY,GACvC;AACA,gBAAQ,UAAU,IAAI,YAAY;AAClC,gBAAQ,MAAM,UAAU;AAAA,MAC1B;AAAA,IACF;AAGA,WAAO,iBAAiB,UAAU,WAAY;AAE5C,eAAS,iBAAiB,WAAW,EAAE,QAAQ,SAAU,SAAS;AAChE,wBAAgB,OAAsB;AAAA,MACxC,CAAC;AAGD,eAAS,iBAAiB,qBAAqB,EAAE,QAAQ,SAAU,SAAS;AAC1E,wBAAgB,OAAsB;AAAA,MACxC,CAAC;AAAA,IACH,CAAC;AAGD,aAAS,iBAAiB,WAAW,EAAE,QAAQ,SAAU,SAAS;AAChE,sBAAgB,OAAsB;AAAA,IACxC,CAAC;AAGD,aAAS,iBAAiB,qBAAqB,EAAE,QAAQ,SAAU,SAAS;AAC1E,sBAAgB,OAAsB;AAAA,IACxC,CAAC;AAAA,EACH,CAAC;",
  "names": ["navLinkLine"]
}
